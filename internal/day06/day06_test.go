package day06

import (
	"reflect"
	"testing"
)

var m = [][]rune{
	{'.', '.', '.', '.', '#', '.', '.', '.', '.', '.'},
	{'.', '.', '.', '.', '.', '.', '.', '.', '.', '#'},
	{'.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
	{'.', '.', '#', '.', '.', '.', '.', '.', '.', '.'},
	{'.', '.', '.', '.', '.', '.', '.', '#', '.', '.'},
	{'.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
	{'.', '#', '.', '.', '^', '.', '.', '.', '.', '.'},
	{'.', '.', '.', '.', '.', '.', '.', '.', '#', '.'},
	{'#', '.', '.', '.', '.', '.', '.', '.', '.', '.'},
	{'.', '.', '.', '.', '.', '.', '#', '.', '.', '.'},
}

func TestSimulateMovement(t *testing.T) {
	mExpected := [][]rune{
		{'.', '.', '.', '.', '#', '.', '.', '.', '.', '.'},
		{'.', '.', '.', '.', 'X', 'X', 'X', 'X', 'X', '#'},
		{'.', '.', '.', '.', 'X', '.', '.', '.', 'X', '.'},
		{'.', '.', '#', '.', 'X', '.', '.', '.', 'X', '.'},
		{'.', '.', 'X', 'X', 'X', 'X', 'X', '#', 'X', '.'},
		{'.', '.', 'X', '.', 'X', '.', 'X', '.', 'X', '.'},
		{'.', '#', 'X', 'X', 'X', 'X', 'X', 'X', 'X', '.'},
		{'.', 'X', 'X', 'X', 'X', 'X', 'X', 'X', '#', '.'},
		{'#', 'X', 'X', 'X', 'X', 'X', 'X', 'X', '.', '.'},
		{'.', '.', '.', '.', '.', '.', '#', 'X', '.', '.'},
	}

	x, y, _ := FindStartingPosition(&m)
	SimulateMovement(&m, x, y)
	if !reflect.DeepEqual(m, mExpected) {
		t.Errorf("Expected %v, got %v", mExpected, m)
	}
}
