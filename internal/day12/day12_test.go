package day12

import "testing"

func TestGetTotalPrice(t *testing.T) {
	testTable := []struct {
		input    [][]rune
		expected int
	}{
		{
			input: [][]rune{
				{'A', 'A', 'A', 'A'},
				{'B', 'B', 'C', 'D'},
				{'B', 'B', 'C', 'C'},
				{'E', 'E', 'E', 'C'},
			},
			expected: 140,
		},
		{
			input: [][]rune{
				{'R', 'R', 'R', 'R', 'I', 'I', 'C', 'C', 'F', 'F'},
				{'R', 'R', 'R', 'R', 'I', 'I', 'C', 'C', 'C', 'F'},
				{'V', 'V', 'R', 'R', 'R', 'C', 'C', 'F', 'F', 'F'},
				{'V', 'V', 'R', 'C', 'C', 'C', 'J', 'F', 'F', 'F'},
				{'V', 'V', 'V', 'V', 'C', 'J', 'J', 'C', 'F', 'E'},
				{'V', 'V', 'I', 'V', 'C', 'C', 'J', 'J', 'E', 'E'},
				{'V', 'V', 'I', 'I', 'I', 'C', 'J', 'J', 'E', 'E'},
				{'M', 'I', 'I', 'I', 'I', 'I', 'J', 'J', 'E', 'E'},
				{'M', 'I', 'I', 'I', 'S', 'I', 'J', 'E', 'E', 'E'},
				{'M', 'M', 'M', 'I', 'S', 'S', 'J', 'E', 'E', 'E'},
			},
			expected: 1930,
		},
		{
			input: [][]rune{
				{'I', 'I', 'I', 'I', 'I', 'C', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'U', 'U', 'U', 'U', 'U'},
				{'I', 'I', 'I', 'I', 'I', 'C', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'F', 'F', 'F', 'F', 'F', 'Y', 'F', 'F', 'U', 'H', 'H', 'H', 'U'},
				{'I', 'I', 'I', 'I', 'T', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'F', 'F', 'Y', 'F', 'Y', 'Y', 'Y', 'Y', 'H', 'H', 'H', 'H'},
				{'I', 'I', 'I', 'I', 'T', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'F', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'H', 'H', 'H', 'H'},
				{'T', 'T', 'T', 'T', 'T', 'T', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'H', 'H', 'H', 'H'},
				{'T', 'T', 'T', 'T', 'T', 'T', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'H', 'H', 'H', 'H'},
				{'B', 'B', 'T', 'T', 'T', 'T', 'R', 'R', 'R', 'R', 'R', 'R', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'H', 'H', 'H', 'H'},
				{'B', 'B', 'T', 'S', 'S', 'S', 'R', 'R', 'R', 'R', 'R', 'R', 'B', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'H', 'H', 'H', 'H'},
				{'B', 'B', 'T', 'S', 'S', 'S', 'S', 'S', 'R', 'R', 'R', 'S', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'H', 'H', 'H', 'H'},
				{'B', 'B', 'Y', 'T', 'T', 'S', 'S', 'S', 'S', 'R', 'S', 'S', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'H', 'H', 'H', 'H'},
				{'B', 'B', 'T', 'T', 'S', 'S', 'A', 'A', 'S', 'S', 'S', 'S', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'H', 'H', 'H', 'H'},
				{'T', 'T', 'T', 'T', 'T', 'A', 'A', 'A', 'S', 'S', 'S', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'V', 'V', 'Y', 'Y', 'A', 'A'},
				{'T', 'T', 'A', 'A', 'A', 'A', 'A', 'A', 'S', 'A', 'A', 'A', 'A', 'F', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'V', 'V', 'V', 'V', 'A', 'A'},
				{'A', 'T', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'F', 'F', 'F', 'F', 'Y', 'Y', 'Y', 'Y', 'V', 'V', 'V', 'V', 'A', 'A'},
				{'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'F', 'F', 'F', 'Y', 'Y', 'Y', 'Y', 'Y', 'V', 'V', 'V', 'V', 'V', 'A'},
				{'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'F', 'Y', 'Y', 'Y', 'Y', 'X', 'Y', 'V', 'V', 'V', 'V', 'V', 'V'},
				{'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'V', 'V', 'V', 'V', 'V', 'V', 'V'},
				{'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'V', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'A', 'V', 'V', 'V', 'V', 'V', 'V', 'V'},
				{'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'V', 'Y', 'Y', 'Y', 'A', 'A', 'Y', 'A', 'A', 'V', 'V', 'V', 'V', 'V', 'V', 'V'},
				{'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'V', 'V', 'Y', 'Y', 'Y', 'A', 'A', 'A', 'A', 'J', 'V', 'J', 'V', 'V', 'V', 'V'},
				{'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'Y', 'Y', 'Y', 'Y', 'A', 'A', 'J', 'J', 'J', 'J', 'J', 'C', 'V', 'V'},
				{'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'Y', 'Y', 'Y', 'Y', 'Y', 'A', 'A', 'J', 'J', 'J', 'J', 'J', 'J', 'V', 'V'},
				{'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'A', 'A', 'J', 'J', 'J', 'J', 'J', 'J', 'J', 'J'},
				{'Q', 'Q', 'A', 'Y', 'Y', 'Y', 'A', 'A', 'Y', 'A', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'A', 'A', 'A', 'J', 'J', 'J', 'J', 'J', 'J'},
				{'Q', 'Q', 'Q', 'Y', 'Y', 'Y', 'Y', 'A', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'C', 'Y', 'T', 'T', 'T', 'J', 'J', 'J', 'J', 'J'},
				{'Q', 'Q', 'Q', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'T', 'T', 'T', 'T', 'T', 'T', 'J', 'J', 'J', 'J', 'J'},
				{'Q', 'Q', 'Q', 'Q', 'Q', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'J', 'J'},
				{'Q', 'Q', 'Q', 'Q', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'J', 'J'},
				{'Q', 'Q', 'Q', 'Q', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'J', 'J'},
				{'Q', 'Q', 'Q', 'Q', 'Q', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'J', 'J', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'J', 'J'},
				{'A', 'Q', 'Q', 'Q', 'Q', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'J', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'J', 'J'},
				{'A', 'A', 'A', 'A', 'Q', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'J', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'J', 'J'},
				{'A', 'A', 'A', 'A', 'A', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'N', 'J', 'J', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'J', 'J'},
				{'A', 'A', 'A', 'A', 'A', 'A', 'Y', 'A', 'A', 'A', 'Y', 'J', 'J', 'J', 'J', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'J', 'J'},
				{'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'Y', 'F', 'F', 'J', 'J', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'V', 'V'},
				{'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'Y', 'F', 'F', 'F', 'J', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'J', 'V'},
				{'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'F', 'F', 'J', 'J', 'J', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'S', 'S', 'H', 'H', 'V'},
				{'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'F', 'F', 'J', 'J', 'J', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'H', 'H', 'H', 'H', 'V'},
			},
			expected: 1930,
		},
	}

	for _, tt := range testTable {
		garden := NewGarden(tt.input)
		actual := garden.GetTotalPrice()
		if actual != tt.expected {
			t.Errorf("Expected %d but got %d", tt.expected, actual)
		}
	}
}
